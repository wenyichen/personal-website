{"version":3,"sources":["utils/reportWebVitals.js","modules/header/header.tsx","constants/constants.tsx","modules/home/home.tsx","modules/common/loading.tsx","apis/gapi.tsx","modules/resume/resume.tsx","utils/fetchUtils.tsx","utils/pdfUtils.tsx","modules/app/app.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","to","emailAddress","Email","useState","isHovered","setIsHovered","isCopied","setIsCopied","displayText","transitions","useTransition","from","position","left","transform","opacity","enter","leave","onCopy","setTimeout","onMouseEnter","onMouseLeave","map","item","key","props","text","a","style","Home","target","rel","href","Loading","gApiInitialized","callWhenGApiInitialized","callback","ResumePdf","result","read","resource","setResource","useEffect","request","window","gapi","client","path","params","mimeType","promise","status","suspender","r","e","console","log","wrapPromise","file","byteCharacters","body","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","File","type","pdfResponseToFile","undefined","noData","loading","error","pageNumber","size","width","ResumeLoading","Resume","fallback","App","basename","process","pdfjs","GlobalWorkerOptions","workerSrc","version","load","init","apiKey","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7928b69.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.scss\";\r\n\r\nexport const Header = () => (\r\n  <div className=\"header\">\r\n    <Link to=\"/\">wenyi chen</Link>\r\n    <div>software engineer @ aws</div>\r\n  </div>\r\n);\r\n","export const linkedinUrl = \"https://www.linkedin.com/in/wenyichen-cs/\";\r\nexport const githubUrl = \"https://github.com/wenyichen\";\r\nexport const emailAddress = \"wenyichen0310@gmail.com\";\r\nexport const mediumUrl = \"https://medium.com/@wenyichen0310\";\r\nexport const resumeFileId = \"1cH1u8KBP2EJSPJAuGXQMRtnLQRqvc2r2FasjSD6BxhY\";\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTransition, animated } from \"react-spring\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport {\r\n  emailAddress,\r\n  githubUrl,\r\n  linkedinUrl,\r\n  mediumUrl,\r\n} from \"../../constants/constants\";\r\nimport \"./home.scss\";\r\n\r\nconst Email = () => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  let displayText = \"email\";\r\n  if (isHovered) {\r\n    displayText = emailAddress;\r\n  }\r\n  if (isCopied) {\r\n    displayText = \"copied\";\r\n  }\r\n\r\n  const transitions = useTransition(displayText, null, {\r\n    from: {\r\n      position: \"absolute\",\r\n      left: \"-50%\",\r\n      transform: \"translateX(-50%)\",\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      opacity: 1,\r\n    },\r\n    leave: { opacity: 0 },\r\n  });\r\n\r\n  const onCopy = () => {\r\n    setIsCopied(true);\r\n    setTimeout(() => setIsCopied(false), 1500);\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className=\"home-menu-email\"\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      {transitions.map(({ item, key, props }) => (\r\n        <CopyToClipboard text={emailAddress} onCopy={onCopy}>\r\n          <animated.a key={key} style={props}>\r\n            {item}\r\n          </animated.a>\r\n        </CopyToClipboard>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const Home = () => (\r\n  <div className=\"home\">\r\n    <div className=\"home-menu\">\r\n      <a target=\"_blank\" rel=\"noreferrer\" href={mediumUrl}>\r\n        blog\r\n      </a>\r\n      <a target=\"_blank\" rel=\"noreferrer\" href={linkedinUrl}>\r\n        linkedin\r\n      </a>\r\n      <a target=\"_blank\" rel=\"noreferrer\" href={githubUrl}>\r\n        github\r\n      </a>\r\n      <Link to=\"/resume\">resume</Link>\r\n      <Email />\r\n    </div>\r\n  </div>\r\n);\r\n","export const Loading = () => {\r\n  return <span>loading...</span>;\r\n};\r\n","export let gApiInitialized = false;\r\n\r\nexport const initGApi = () => {\r\n  console.log(process.env.REACT_APP_GAPI_AUTH_TOKEN);\r\n  window.gapi.client\r\n    .init({\r\n      apiKey: process.env.REACT_APP_GAPI_AUTH_TOKEN,\r\n    })\r\n    .then(() => {\r\n      gApiInitialized = true;\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n    });\r\n};\r\n\r\nexport const callWhenGApiInitialized = (callback: () => any) => {\r\n  if (gApiInitialized) {\r\n    callback();\r\n    return;\r\n  }\r\n  setTimeout(() => callWhenGApiInitialized(callback), 100);\r\n};\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\nimport { resumeFileId } from \"../../constants/constants\";\r\nimport { wrapPromise } from \"../../utils/fetchUtils\";\r\nimport { pdfResponseToFile } from \"../../utils/pdfUtils\";\r\nimport { Loading } from \"../common/loading\";\r\nimport \"./resume.scss\";\r\nimport { callWhenGApiInitialized } from \"../../apis/gapi\";\r\n\r\ninterface IResource {\r\n  read(): any;\r\n}\r\n\r\nconst MAX_PDF_WIDTH = 1000;\r\n\r\nexport const ResumePdf = () => {\r\n  const [resource, setResource] = useState<IResource>({\r\n    read: () => undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getResume = () => {\r\n      const request = window.gapi.client.request({\r\n        path: `https://www.googleapis.com/drive/v3/files/${resumeFileId}/export`,\r\n        params: {\r\n          mimeType: \"application/pdf\",\r\n        },\r\n      });\r\n      setResource(wrapPromise(request));\r\n    };\r\n    callWhenGApiInitialized(getResume);\r\n  }, []);\r\n\r\n  let result;\r\n  result = resource.read();\r\n  const file = result ? pdfResponseToFile(result) : undefined;\r\n\r\n  return (\r\n    <div className=\"resume-document-container\">\r\n      <Document\r\n        className=\"resume-document\"\r\n        file={file}\r\n        noData=\"\"\r\n        loading=\"\"\r\n        error=\"failed to load resume\"\r\n      >\r\n        <Page pageNumber={1} size=\"4A0\" width={MAX_PDF_WIDTH} />\r\n      </Document>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResumeLoading = () => {\r\n  return (\r\n    <div className=\"resume-loading\">\r\n      <Loading />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Resume = () => {\r\n  return (\r\n    <div className=\"resume\">\r\n      <Suspense fallback={<ResumeLoading />}>\r\n        <ResumePdf />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n","export const wrapPromise = (promise: gapi.client.HttpRequest<any>) => {\r\n  let status = \"pending\";\r\n  let result: any;\r\n  let suspender = promise.then(\r\n    (r) => {\r\n      status = \"success\";\r\n      result = r;\r\n    },\r\n    (e) => {\r\n      status = \"error\";\r\n      result = e;\r\n    }\r\n  );\r\n  return {\r\n    read() {\r\n      if (status === \"pending\") {\r\n        throw suspender;\r\n      } else if (status === \"error\") {\r\n        console.log(result);\r\n      } else if (status === \"success\") {\r\n        return result;\r\n      }\r\n    },\r\n  };\r\n};\r\n","export const pdfResponseToFile = (\r\n  result: gapi.client.HttpRequestFulfilled<File>\r\n) => {\r\n  const byteCharacters = result.body;\r\n  const byteNumbers = new Array(byteCharacters.length);\r\n  for (let i = 0; i < byteCharacters.length; i++) {\r\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n  }\r\n  const byteArray = new Uint8Array(byteNumbers);\r\n  const file = new File([byteArray], \"Resume\", {\r\n    type: \"application/pdf;base64\",\r\n  });\r\n  return file;\r\n};\r\n","import React from \"react\";\nimport \"./app.scss\";\nimport { Header } from \"../header/header\";\nimport { Home } from \"../home/home\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { Resume } from \"../resume/resume\";\n\nexport const App = () => {\n  return (\n    <div className=\"app\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\nimport { App } from './modules/app/app';\r\nimport { pdfjs } from 'react-pdf';\r\nimport { initGApi } from './apis/gapi';\r\n\r\nconsole.log(process.env);\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nwindow.gapi.load('client', initGApi);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}