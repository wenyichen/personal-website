{"version":3,"sources":["utils/reportWebVitals.js","modules/header/header.tsx","modules/home/home.tsx","constants/constants.tsx","modules/common/loading.tsx","modules/resume/resume.tsx","utils/fetch-utils.tsx","utils/pdf-utils.tsx","modules/app/app.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","to","Home","target","rel","href","Loading","ResumePdf","result","useState","read","resource","setResource","useEffect","getResume","request","window","gapi","client","path","params","mimeType","promise","status","suspender","r","e","console","log","wrapPromise","load","init","catch","file","byteCharacters","body","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","File","type","pdfResponseToFile","undefined","styles","StyleSheet","create","document","display","width","page","justifyContent","noData","loading","error","pageNumber","size","style","Resume","fallback","App","basename","process","pdfjs","GlobalWorkerOptions","workerSrc","version","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87447bc4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './header.scss'\r\n\r\nexport const Header = () => (\r\n    <div className=\"header\">\r\n        <Link to=\"/\">\r\n            wenyi chen\r\n        </Link>\r\n        <div>\r\n            software engineer @ aws\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { emailUrl, githubUrl, linkedinUrl, mediumUrl } from '../../constants/constants';\r\nimport './home.scss';\r\n\r\n\r\nexport const Home = () => (\r\n    <div className=\"home\">\r\n        <div className=\"home-menu\">\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={mediumUrl}>blog</a>\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={linkedinUrl}>linkedin</a>\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={githubUrl}>github</a>\r\n            <Link to=\"/resume\">resume</Link>\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={emailUrl}>email</a>\r\n        </div>\r\n    </div>\r\n)","export const linkedinUrl = \"https://www.linkedin.com/in/wenyichen-cs/\";\r\nexport const githubUrl = \"https://github.com/wenyichen\";\r\nexport const emailUrl = \"mailto:wenyichen0310@gmail.com\";\r\nexport const mediumUrl = \"https://medium.com/@wenyichen0310\"\r\nexport const resumeFileId = \"1cH1u8KBP2EJSPJAuGXQMRtnLQRqvc2r2FasjSD6BxhY\"","export const Loading = () => {\r\n    return <span>loading...</span>\r\n}","import React, { Suspense, useEffect, useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { PDFViewer, StyleSheet } from '@react-pdf/renderer';\r\nimport { resumeFileId } from '../../constants/constants';\r\nimport { wrapPromise } from '../../utils/fetch-utils';\r\nimport { pdfResponseToFile } from '../../utils/pdf-utils';\r\nimport { Loading } from '../common/loading';\r\nimport './resume.scss'\r\n\r\ninterface IResource {\r\n    read(): any\r\n}\r\n\r\nexport const ResumePdf = () => {\r\n    const [resource, setResource] = useState<IResource>({ read: () => undefined });\r\n\r\n\r\n    useEffect(() => {\r\n        const initGApi = () => {\r\n            window.gapi.client.init({\r\n                'apiKey': 'AIzaSyB7coZjyCZ9vhS5N0_AsrQ_RQt8QyFeVzQ',\r\n            }).then(getResume).catch(e => {\r\n                console.log(e)\r\n            });\r\n        }\r\n\r\n        const getResume = () => {\r\n            const request = window.gapi.client.request({\r\n                path: `https://www.googleapis.com/drive/v3/files/${resumeFileId}/export`,\r\n                params: {\r\n                    mimeType: 'application/pdf'\r\n                }\r\n            })\r\n            setResource(wrapPromise(request));\r\n        }\r\n\r\n        window.gapi.load('client', initGApi);\r\n    }, [])\r\n\r\n    let result;\r\n    result = resource.read();\r\n    const file = result ? pdfResponseToFile(result) : undefined;\r\n\r\n    const styles = StyleSheet.create({\r\n        document: {\r\n            display: 'flex',\r\n            width: '100%'\r\n        },\r\n        page: {\r\n            width: \"90vw\",\r\n            justifyContent: 'center',\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Document\r\n                className=\"resume-document\"\r\n                styles={styles.document}\r\n                file={file}\r\n                noData=\"no data\"\r\n                loading=\"loading...\"\r\n                error=\"failed to load resume\"\r\n                >\r\n                <Page pageNumber={1} size=\"4A0\" width={1000} style={styles.page} />\r\n            </Document>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Resume = () => {\r\n    return <div className=\"resume\"><Suspense fallback={<Loading />}><ResumePdf /></Suspense></div>;\r\n}","export const wrapPromise = (promise: gapi.client.HttpRequest<any>) => {\r\n    let status = \"pending\";\r\n    let result: any;\r\n    let suspender = promise.then(\r\n        r => {\r\n            status = \"success\";\r\n            result = r;\r\n        },\r\n        e => {\r\n            status = \"error\";\r\n            result = e;\r\n        }\r\n    );\r\n    return {\r\n        read() {\r\n            if (status === \"pending\") {\r\n                throw suspender;\r\n            } else if (status === \"error\") {\r\n                console.log(result);\r\n            } else if (status === \"success\") {\r\n                return result;\r\n            }\r\n        }\r\n    };\r\n}","\r\nexport const pdfResponseToFile = (result: gapi.client.HttpRequestFulfilled<File>) => {\r\n    const byteCharacters = result.body\r\n    const byteNumbers = new Array(byteCharacters.length);\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n    const byteArray = new Uint8Array(byteNumbers);\r\n    const file = new File([byteArray], \"Resume\", { type: 'application/pdf;base64' });\r\n    return file;\r\n}","\nimport React from 'react';\nimport './app.scss'\nimport { Header } from '../header/header';\nimport { Home } from '../home/home';\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport { Resume } from '../resume/resume';\n\nexport const App = () => {\n  return (\n    <div className=\"app\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Switch>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './utils/reportWebVitals';\r\nimport { App } from './modules/app/app';\r\nimport { pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}